package ca.jay.jac444.assignment1;

/************************************************************************
 *  Compilation:  EightQueensGame.java
 *  Execution:    
 *
 *  This class represent he classic Eight Queens puzzle 
 *  which is to place eight queens on a chessboard 
 *  such that no two queens can attack each other
 *
 *  Assignment 1- Task2
 *
 *  Output
 *
 * @author Jongkuk Lee
 * @version 1.0
 * @since 2017-10-09
 ************************************************************************/
class EightQueensGame {
    public static final int COLSNUM = 8;
    
    public static int [] cols;
   
    @SuppressWarnings("static-access")
	EightQueensGame (int num)
    {
    	this.cols = new int[COLSNUM];
    }
    
    
    /*
    1.If the remainder from dividing n by 6 is not 2 or 3 then the list is simply all even numbers followed by all odd numbers not greater than N.
    2.Otherwise, write separate lists of even and odd numbers (i. e. 2, 4, 6, 8 — 1, 3, 5, 7).
    3.If the remainder is 2, swap 1 and 3 in odd list and move 5 to the end (i. e. 3, 1, 7, 5).
    4.If the remainder is 3, move 2 to the end of even list and 1,3 to the end of odd list (i. e. 4, 6, 8, 2 — 5, 7, 1, 3).
    5.Append odd list to the even list and place queens in the rows given by these numbers, from left to right (i. e. a2, b4, c6, d8, e3, f1, g7, h5).
	*/
    
    public class GameRule 
    {
    	@SuppressWarnings("static-access")
		public void makeEightQueen() throws Exception
    	{
    		// if remainder is 2 or 3, exception 
        	if (EightQueensGame.this.COLSNUM % 6 == 2 
        	 || EightQueensGame.this.COLSNUM % 6 == 3 )
        	{
        		throw new Exception("the remainder from dividing n by 6 is not 2 or 3.");
        	}
        	
        	// divide even number and odd number 
        	int [] evens= new int[EightQueensGame.this.COLSNUM/2];
        	int [] odds = new int[EightQueensGame.this.COLSNUM/2];
        	
        	for(int i = 1, j = 0, k = 0; i <= EightQueensGame.this.COLSNUM; i++)
        	{
        		if(i % 2 == 0) evens[j++] = i;
        		else odds[k++] = i;
        	}
        	// swap index1 and index3 in odd list and move index5 to the end
        	// and input them to columns array
        	
        	EightQueensGame.this.cols[0] = evens[0];
        	EightQueensGame.this.cols[1] = evens[1];
        	EightQueensGame.this.cols[2] = evens[2];
        	EightQueensGame.this.cols[3] = evens[3];
        	EightQueensGame.this.cols[4] = odds[1];
        	EightQueensGame.this.cols[5] = odds[0];
        	EightQueensGame.this.cols[6] = odds[3];        	
        	EightQueensGame.this.cols[7] = odds[2];    		
    	}
    }
    
    
    
    
    public static void main(String []args){
        Scanner sc = new Scanner(System.in);
        N = sc.nextInt();
        cols = new int [N+1];
        queens(0);
    }
}
